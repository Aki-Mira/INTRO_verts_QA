// импортируем необходимые нам библиотеки для теста
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.testng.Assert;
import org.testng.annotations.Test;
import java.time.Duration;

// мы будем тестировать текстовое поле на сайте https://demoqa.com/text-box
// объявляем тестовый класс
public class TextBoxTest {

// теперь время первого теста, мы ставим аннотацию @Test, чтобы TestNG смог узнать, что это именно тест
    @Test
// каждый тест - это один метод, наш метод называется TextBox
    public void TextBox() {
// тут мы говорим нашему TestNG в каком браузере мы будем тестировать поле - у нас это Chrome, так и оставим
        WebDriver driver = new ChromeDriver();
// вместо слов ИСПРАВЬ МЕНЯ ниже, нам нужно добавить url страницы, на которой расположено наше текстовое поле, у нас это https://demoqa.com/text-box, вставляем url в кавычки ""
        driver.get("ИСПРАВЬ МЕНЯ");
// теперь мы хотим протестировать титл страницы, вспомним, что в html разметке всегда есть title, заголовок страницы, который отображается у вас на вкладке, как бы ее название. Мы его тестируем, чтобы убедится, что мы реально попали на нужную страницу. Название нашей страницы DEMOQA
// чтобы протестировать наш title в TestNG есть специалная функция извлечения данных из html разметки в поле title, это функция driver.getTitle(), мы добавляем значение этой информации в переменую типа String и названия title
        String title = driver.getTitle();,
// теперь мы сравниваем методом Assert.assertEquals совпадает ли название нашей страницы DEMOQA и значение переменной title. Нам надо в поле ИСПРАВЬ МЕНЯ ниже вписать ожидаемое нами название, те DEMOQA
        Assert.assertEquals("ИСПРАВЬ МЕНЯ", title);
// первый этап тестирования тестового поля окончен, мы переходим непосредственно к тестированию самого поля, вы уже выбрали какое поле тестируем:Name, Email, Current Address, Permananet Address, я буду указывать значения для соотвествующего поля так же через запятую, берем нужное.
// лучший способ найти элемент в html коде - это xpath, будем использовать его, открываем страницу https://demoqa.com/text-box в браузере Chrome, открывает иснтрументы DevTools (используем F12), далее открываем минивидео-урок и смотрим как найти xpath искомого элемента: https://youtu.be/aXxpTyQVMeM?si=LQT9hza4iaQM6orF
// проверить себя можно тут: https://docs.google.com/document/d/1mmfl-lTzk63ciJHrXs1Ovq0ZB-BfawUc4d0QD6G5hso/edit?usp=sharing
// теперь мы создаем объект WebElement с именем textBox при помощи функции driver.findElement В поле ИСПРАВЬ МЕНЯ впишите свой Xpath
        WebElement textBox = driver.findElement(By.xpath("ИСПРАВЬ МЕНЯ"));
// чтобы у нас сработало заполнение формы, мы должны нажать на кнопку Submit на сранице с формой, а значит нам тоже надо ее найти и указать ее Xpath, заполните поле ИСПРАВЬ МЕНЯ встави туда Xpath кнопки Submit (проверить себя можно в том е файле выше)
        WebElement submitButton = driver.findElement(By.xpath("ИСПРАВЬ МЕНЯ"));
// теперь мы хотим что-то вписать в текстовое поле, имя или адрес (обрати внимание, что в email можно вписать значение только по образцу name@example.com - .ru он кажется не понимает), выбираем любое значение и вписываем его в поле ИСПРАВЬ МЕНЯ
        textBox.sendKeys("ИСПРАВЬ МЕНЯ");
// теперь мы используем функцию click для нажатия на кнопку, которую мы нашли ранее
        submitButton.click();
// наше значение отправилось, как мы уже заметили, посе отправки формы, ниже на странице появляются надписи с заполненными полями, к примеру при заполнении поля name именем Oleg появляется надпись ниже на странице Name:Oleg - Это правильно ожидаемое поведение программы, его мы и будем проверять
// мы получили данное сообщение и теперь нам нужно найти его Xpath, чтобы и наша программа знала, что сравнивать, мы объявляем новый элемент message, найдите Xpath сообщения и внесите его в поле ИСПРАВЬ МЕНЯ, проверить себя можно там же в файле
        WebElement message = driver.findElement(By.xpath("ИСПРАВЬ МЕНЯ"));
// обратим внимание, что для элементов currentAddress и PermanentAddress Xpath совпадает с Xpath самого текстового поля, а значит мы не сможем однозначно найти наше сообщение, в этом случае мы будем использовать css селектор, который объединит в себе id и class объекта, так как они уникальны для элемента messange, заходим в DevTools, находим элемент сообщения и смотри его id и class и вставляем в код ниже вместо слов Id и Class(код выше с Xpath следует стереть)
// как показала практика для поля email тоже лучше использовать  css селектор       
        WebElement message = driver.findElement(By.cssSelector("#Id.Class"));
// тут мы извлекаем строку из данного элемента messange
        String value = message.getText();
//а тут при помощи метода Assert.assertEquals сравниваем совпадает то, что мы ожидали и значение из элемента messange, копируем для каждого элемента свое значени, у меня приведен пример для Имени Олег: Name:Oleg, вам копипастом нужно сделать для своего поля и вставляем в графу ИСПРАВЬ МЕНЯ
        Assert.assertEquals("ИСПРАВЬ МЕНЯ", value);
// все, дест окончен, закрываем браузер
        driver.quit();
    }
}
